name: deploy-spring-eks

on:
  workflow_dispatch:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Node 14
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Build with npm
        run: |
          cd demo-react
          npm cache clean --force
          rm -rf node_modules package-lock.json
          npm install
          CI='' npm run build

      - name: Build with mvn
        run: |
          cd demo
          mvn clean package -DskipTests

      - name: Dockerize and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: zionex-ecr-tokyo
          IMAGE_TAG: demo
        run: |
          docker build -t demo .
          docker tag $IMAGE_TAG:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set up kubectl
        uses: tale/kubectl-action@v1
        with:
          kubectl-version: v1.21.2

      - name: Patch deployment
        env:
          CLUSTER_NAME: zionex-eks-tokyo
          NAMESPACE: spring
          DEPLOYMENT: spring-boot-demo
        run: |
          aws eks --region ${{ secrets.AWS_REGION }} update-kubeconfig --name $CLUSTER_NAME
          kubectl -n $NAMESPACE rollout restart deployment $DEPLOYMENT

